{"version":3,"file":"static/js/31.27b8d8a9.chunk.js","mappings":"6PA2BA,EAxBkB,SAAHA,GAAsB,IAAhBC,EAAQD,EAARC,SACnBC,GAAoCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAMhC,OACEI,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACLC,YAAY,wBACZC,MAAOP,EACPQ,SAAU,SAAAC,GAAC,OAAIR,EAAcQ,EAAEC,OAAOH,MAAM,KAE9CH,EAAAA,EAAAA,KAAA,UAAQO,QAZS,WACnBhB,EAASK,EACX,EAUkCG,SAAC,aAGrC,ECjBaS,EAAS,SAAHlB,GAKZ,IAJLmB,EAAanB,EAAbmB,cACAC,EAAgBpB,EAAhBoB,iBACAnB,EAAQD,EAARC,SACAoB,EAAiBrB,EAAjBqB,kBAEMC,GAAWC,EAAAA,EAAAA,MAOjB,OACEf,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YACJC,EAAAA,EAAAA,KAACc,EAAS,CAACvB,SAAUA,KACnBoB,IACAX,EAAAA,EAAAA,KAAA,MAAAD,SACGU,EAAcM,KAAI,SAAAC,GAAK,OACtBhB,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACiB,EAAAA,GAAI,CACHC,GAAE,WAAAC,OAAaH,EAAMI,IACrBb,QAAS,kBAfGc,EAeqBL,EAAMI,GAdnDV,EAAiBW,QACjBT,EAAS,WAADO,OAAYE,IAFI,IAAAA,CAe8B,EAACtB,SAE1CiB,EAAMM,SALFN,EAAMI,GAOV,QAMjB,EASA,G","sources":["components/Searchbar/Searchbar.jsx","components/Movies/Movies.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { useState } from 'react';\n\nconst SearchBar = ({ onSearch }) => {\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const handleSearch = () => {\n    onSearch(searchTerm);\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        placeholder=\"Search for a movie...\"\n        value={searchTerm}\n        onChange={e => setSearchTerm(e.target.value)}\n      />\n      <button onClick={handleSearch}>Search</button>\n    </div>\n  );\n};\n\nSearchBar.propTypes = {\n  onSearch: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n","import PropTypes from 'prop-types';\nimport { Link, useNavigate } from 'react-router-dom';\nimport SearchBar from '../Searchbar/Searchbar';\n\nexport const Movies = ({\n  searchResults,\n  setSelectedMovie,\n  onSearch,\n  showSearchBarOnly,\n}) => {\n  const navigate = useNavigate();\n\n  const handleSelectMovie = movieId => {\n    setSelectedMovie(movieId);\n    navigate(`/movies/${movieId}`);\n  };\n\n  return (\n    <div>\n      <h2>Movies</h2>\n      <SearchBar onSearch={onSearch} />\n      {!showSearchBarOnly && (\n        <ul>\n          {searchResults.map(movie => (\n            <li key={movie.id}>\n              <Link\n                to={`/movies/${movie.id}`}\n                onClick={() => handleSelectMovie(movie.id)}\n              >\n                {movie.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nMovies.propTypes = {\n  searchResults: PropTypes.array.isRequired,\n  setSelectedMovie: PropTypes.func.isRequired,\n  onSearch: PropTypes.func.isRequired,\n  showSearchBarOnly: PropTypes.bool.isRequired,\n};\n\nexport default Movies;\n"],"names":["_ref","onSearch","_useState","useState","_useState2","_slicedToArray","searchTerm","setSearchTerm","_jsxs","children","_jsx","type","placeholder","value","onChange","e","target","onClick","Movies","searchResults","setSelectedMovie","showSearchBarOnly","navigate","useNavigate","SearchBar","map","movie","Link","to","concat","id","movieId","title"],"sourceRoot":""}